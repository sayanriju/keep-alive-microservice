
<!DOCTYPE html>
<html lang="">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Current Status</title>

    <!-- Bootstrap CSS -->
    <link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet">

    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
      <script src="https://oss.maxcdn.com/libs/html5shiv/3.7.3/html5shiv.js"></script>
      <script src="https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js"></script>
    <![endif]-->
    <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/cuid/1.3.8/browser-cuid.min.js"></script>
    <script type="text/javascript" src="<%= siteUrl %>/faye/client.js"></script>
  </head>
  <body>
    <div id="app">
      <h2>{{ id }}</h2>
      <br/>
      {{ isOnline ? "Online" : "Offline" }}
      <br/><br/>
      <button @click="toggleOnlineState()" :disabled="statusChangeInProgress === true">Toggle Online State</button>
    </div>
    <script>
    var HEARTBEAT_SEND_INTERVAL = 2 // seconds
    var faye = new Faye.Client('<%= siteUrl %>/faye')
    var app = new Vue({
      el: '#app',
      data: {
        id: null,
        isOnline: true,
        statusChangeInProgress: false,
        heartbeatTimer: null
      },
      created() {
        this.id = cuid.slug()
        this.startSendingHeartbeats()
        faye.subscribe("/just-came-online", ({ id }) => {
          console.log("==> Just came online: ", id);
          if (id === this.id) {
            this.isOnline = true
            this.statusChangeInProgress = false
          }
        })
        faye.subscribe("/went-offline", ({ ids }) => {
          console.log("==> Went offline: ", ids);
          if (ids.includes(this.id)) {
            this.isOnline = false
            this.statusChangeInProgress = false
          }
        })
      },
      destroyed() {
        this.stopSendingHeartbeats()
      },
      methods: {
        startSendingHeartbeats() {
          if (this.heartbeatTimer !== null) return
          this.heartbeatTimer = setInterval(async () => {
            await faye.publish("/heartbeat/" + this.id, {})
            console.log("Sending heartbeat...")
          }, HEARTBEAT_SEND_INTERVAL * 1000)
        },
        stopSendingHeartbeats() {
          if (this.heartbeatTimer === null) return
          clearInterval(this.heartbeatTimer)
          this.heartbeatTimer = null
        },
        toggleOnlineState() {
          this.isOnline = !this.isOnline // optimistic UI update
          this.statusChangeInProgress = true
            if (this.heartbeatTimer !== null) {
             this.stopSendingHeartbeats()
            } else {
              this.startSendingHeartbeats()
            }
        }
      },
    })
    </script>
  </body>
</html>
